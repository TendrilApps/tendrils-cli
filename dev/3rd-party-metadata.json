{
  "preamble": "Tendrils makes use of the open source libraries listed below.",
  "cargo-dependencies":
  {
    "registry+https://github.com/rust-lang/crates.io-index#aho-corasick@1.1.3":
    {
      "name": "aho-corasick",
      "version": "1.1.3",
      "license": "Unlicense OR MIT",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "Fast multiple substring searching.",
      "repo": "https://github.com/BurntSushi/aho-corasick"
    },
    "registry+https://github.com/rust-lang/crates.io-index#ansi-str@0.8.0":
    {
      "name": "ansi-str",
      "version": "0.8.0",
      "license": "MIT",
      "license_files":
      [
        "LICENSE"
      ],
      "desc": "A library which provides a set of methods to work with ANSI strings",
      "repo": "https://github.com/zhiburt/ansi-str"
    },
    "registry+https://github.com/rust-lang/crates.io-index#ansitok@0.2.0":
    {
      "name": "ansitok",
      "version": "0.2.0",
      "license": "MIT",
      "license_files":
      [
        "LICENSE"
      ],
      "desc": "A library for parsing ANSI Escape Codes",
      "repo": "https://gitlab.com/zhiburt/ansitok"
    },
    "registry+https://github.com/rust-lang/crates.io-index#anstream@0.6.14":
    {
      "name": "anstream",
      "version": "0.6.14",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "A simple cross platform library for writing colored text to a terminal.",
      "repo": "https://github.com/rust-cli/anstyle.git"
    },
    "registry+https://github.com/rust-lang/crates.io-index#anstyle-parse@0.2.4":
    {
      "name": "anstyle-parse",
      "version": "0.2.4",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "Parse ANSI Style Escapes",
      "repo": "https://github.com/rust-cli/anstyle.git"
    },
    "registry+https://github.com/rust-lang/crates.io-index#anstyle-query@1.0.3":
    {
      "name": "anstyle-query",
      "version": "1.0.3",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "Look up colored console capabilities",
      "repo": "https://github.com/rust-cli/anstyle"
    },
    "registry+https://github.com/rust-lang/crates.io-index#anstyle-wincon@3.0.3":
    {
      "name": "anstyle-wincon",
      "version": "3.0.3",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "Styling legacy Windows terminals",
      "repo": "https://github.com/rust-cli/anstyle.git"
    },
    "registry+https://github.com/rust-lang/crates.io-index#anstyle@1.0.7":
    {
      "name": "anstyle",
      "version": "1.0.7",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "ANSI text styling",
      "repo": "https://github.com/rust-cli/anstyle.git"
    },
    "registry+https://github.com/rust-lang/crates.io-index#arrayvec@0.5.2":
    {
      "name": "arrayvec",
      "version": "0.5.2",
      "license": "MIT/Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT",
        "LICENSE-APACHE"
      ],
      "desc": "A vector with fixed capacity, backed by an array (it can be stored on the stack too). Implements fixed capacity ArrayVec and ArrayString.",
      "repo": "https://github.com/bluss/arrayvec"
    },
    "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.3.0":
    {
      "name": "autocfg",
      "version": "1.3.0",
      "license": "Apache-2.0 OR MIT",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "Automatic cfg for Rust compiler features",
      "repo": "https://github.com/cuviper/autocfg"
    },
    "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.5.0":
    {
      "name": "bitflags",
      "version": "2.5.0",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "A macro to generate structures which behave like bitflags.\n",
      "repo": "https://github.com/bitflags/bitflags"
    },
    "registry+https://github.com/rust-lang/crates.io-index#bytecount@0.6.8":
    {
      "name": "bytecount",
      "version": "0.6.8",
      "license": "Apache-2.0/MIT",
      "license_files":
      [
        "LICENSE.Apache2",
        "LICENSE.MIT"
      ],
      "desc": "count occurrences of a given byte, or the number of UTF-8 code points, in a byte slice, fast",
      "repo": "https://github.com/llogiq/bytecount"
    },
    "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0":
    {
      "name": "cfg-if",
      "version": "1.0.0",
      "license": "MIT/Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT",
        "LICENSE-APACHE"
      ],
      "desc": "A macro to ergonomically define an item depending on a large number of #[cfg]\nparameters. Structured like an if-else chain, the first matching branch is the\nitem that gets emitted.\n",
      "repo": "https://github.com/alexcrichton/cfg-if"
    },
    "registry+https://github.com/rust-lang/crates.io-index#clap@4.5.4":
    {
      "name": "clap",
      "version": "4.5.4",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "A simple to use, efficient, and full-featured Command Line Argument Parser",
      "repo": "https://github.com/clap-rs/clap"
    },
    "registry+https://github.com/rust-lang/crates.io-index#clap_builder@4.5.2":
    {
      "name": "clap_builder",
      "version": "4.5.2",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "A simple to use, efficient, and full-featured Command Line Argument Parser",
      "repo": "https://github.com/clap-rs/clap"
    },
    "registry+https://github.com/rust-lang/crates.io-index#clap_derive@4.5.4":
    {
      "name": "clap_derive",
      "version": "4.5.4",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "Parse command line argument by defining a struct, derive crate.",
      "repo": "https://github.com/clap-rs/clap/tree/master/clap_derive"
    },
    "registry+https://github.com/rust-lang/crates.io-index#clap_lex@0.7.0":
    {
      "name": "clap_lex",
      "version": "0.7.0",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "Minimal, flexible command line parser",
      "repo": "https://github.com/clap-rs/clap/tree/master/clap_lex"
    },
    "registry+https://github.com/rust-lang/crates.io-index#colorchoice@1.0.1":
    {
      "name": "colorchoice",
      "version": "1.0.1",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "Global override of color control",
      "repo": "https://github.com/rust-cli/anstyle"
    },
    "registry+https://github.com/rust-lang/crates.io-index#dashmap@5.5.3":
    {
      "name": "dashmap",
      "version": "5.5.3",
      "license": "MIT",
      "license_files":
      [
        "LICENSE"
      ],
      "desc": "Blazing fast concurrent HashMap for Rust.",
      "repo": "https://github.com/xacrimon/dashmap"
    },
    "registry+https://github.com/rust-lang/crates.io-index#equivalent@1.0.1":
    {
      "name": "equivalent",
      "version": "1.0.1",
      "license": "Apache-2.0 OR MIT",
      "license_files": [
        "LICENSE-MIT"
      ],
      "desc": "Traits for key comparison in maps.",
      "repo": "https://github.com/cuviper/equivalent"
    },
    "registry+https://github.com/rust-lang/crates.io-index#exitcode@1.1.2":
    {
      "name": "exitcode",
      "version": "1.1.2",
      "license": "Apache-2.0",
      "license_files":
      [
        "LICENSE"
      ],
      "desc": "Preferred system exit codes as defined by sysexits.h",
      "repo": "https://github.com/benwilber/exitcode"
    },
    "registry+https://github.com/rust-lang/crates.io-index#fnv@1.0.7":
    {
      "name": "fnv",
      "version": "1.0.7",
      "license": "Apache-2.0 / MIT",
      "license_files":
      [
        "LICENSE-APACHE",
        "LICENSE-MIT"
      ],
      "desc": "Fowler–Noll–Vo hash function",
      "repo": "https://github.com/servo/rust-fnv"
    },
    "registry+https://github.com/rust-lang/crates.io-index#fs_extra@1.3.0":
    {
      "name": "fs_extra",
      "version": "1.3.0",
      "license": "MIT",
      "license_files":
      [
        "LICENSE"
      ],
      "desc": "Expanding std::fs and std::io. Recursively copy folders with information about process and much more.",
      "repo": "https://github.com/webdesus/fs_extra"
    },
    "registry+https://github.com/rust-lang/crates.io-index#fuchsia-cprng@0.1.1":
    {
      "name": "fuchsia-cprng",
      "version": "0.1.1",
      "license": null,
      "license_files":
      [
        "LICENSE"
      ],
      "desc": "Rust crate for the Fuchsia cryptographically secure pseudorandom number generator",
      "repo": "https://fuchsia.googlesource.com/fuchsia/+/master/garnet/public/rust/fuchsia-cprng"
    },
    "registry+https://github.com/rust-lang/crates.io-index#futures-channel@0.3.30":
    {
      "name": "futures-channel",
      "version": "0.3.30",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "Channels for asynchronous communication using futures-rs.\n",
      "repo": "https://github.com/rust-lang/futures-rs"
    },
    "registry+https://github.com/rust-lang/crates.io-index#futures-core@0.3.30":
    {
      "name": "futures-core",
      "version": "0.3.30",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "The core traits and types in for the `futures` library.\n",
      "repo": "https://github.com/rust-lang/futures-rs"
    },
    "registry+https://github.com/rust-lang/crates.io-index#futures-executor@0.3.30":
    {
      "name": "futures-executor",
      "version": "0.3.30",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "Executors for asynchronous tasks based on the futures-rs library.\n",
      "repo": "https://github.com/rust-lang/futures-rs"
    },
    "registry+https://github.com/rust-lang/crates.io-index#futures-io@0.3.30":
    {
      "name": "futures-io",
      "version": "0.3.30",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "The `AsyncRead`, `AsyncWrite`, `AsyncSeek`, and `AsyncBufRead` traits for the futures-rs library.\n",
      "repo": "https://github.com/rust-lang/futures-rs"
    },
    "registry+https://github.com/rust-lang/crates.io-index#futures-macro@0.3.30":
    {
      "name": "futures-macro",
      "version": "0.3.30",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "The futures-rs procedural macro implementations.\n",
      "repo": "https://github.com/rust-lang/futures-rs"
    },
    "registry+https://github.com/rust-lang/crates.io-index#futures-sink@0.3.30":
    {
      "name": "futures-sink",
      "version": "0.3.30",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "The asynchronous `Sink` trait for the futures-rs library.\n",
      "repo": "https://github.com/rust-lang/futures-rs"
    },
    "registry+https://github.com/rust-lang/crates.io-index#futures-task@0.3.30":
    {
      "name": "futures-task",
      "version": "0.3.30",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "Tools for working with tasks.\n",
      "repo": "https://github.com/rust-lang/futures-rs"
    },
    "registry+https://github.com/rust-lang/crates.io-index#futures-timer@3.0.3":
    {
      "name": "futures-timer",
      "version": "3.0.3",
      "license": "MIT/Apache-2.0",
      "license_files":
      [
        "LICENSE-APACHE",
        "LICENSE-MIT"
      ],
      "desc": "Timeouts for futures.\n",
      "repo": "https://github.com/async-rs/futures-timer"
    },
    "registry+https://github.com/rust-lang/crates.io-index#futures-util@0.3.30":
    {
      "name": "futures-util",
      "version": "0.3.30",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "Common utilities and extension traits for the futures-rs library.\n",
      "repo": "https://github.com/rust-lang/futures-rs"
    },
    "registry+https://github.com/rust-lang/crates.io-index#futures@0.3.30":
    {
      "name": "futures",
      "version": "0.3.30",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "An implementation of futures and streams featuring zero allocations,\ncomposability, and iterator-like interfaces.\n",
      "repo": "https://github.com/rust-lang/futures-rs"
    },
    "registry+https://github.com/rust-lang/crates.io-index#getrandom@0.2.15":
    {
      "name": "getrandom",
      "version": "0.2.15",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "A small cross-platform library for retrieving random data from system source",
      "repo": "https://github.com/rust-random/getrandom"
    },
    "registry+https://github.com/rust-lang/crates.io-index#glob-match@0.2.1":
    {
      "name": "glob-match",
      "version": "0.2.1",
      "license": "MIT",
      "license_files":
      [
        "LICENSE"
      ],
      "desc": "An extremely fast glob matcher",
      "repo": null
    },
    "registry+https://github.com/rust-lang/crates.io-index#glob@0.3.1":
    {
      "name": "glob",
      "version": "0.3.1",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "Support for matching file paths against Unix shell style patterns.\n",
      "repo": "https://github.com/rust-lang/glob"
    },
    "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.14.5":
    {
      "name": "hashbrown",
      "version": "0.14.5",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "A Rust port of Google's SwissTable hash map",
      "repo": "https://github.com/rust-lang/hashbrown"
    },
    "registry+https://github.com/rust-lang/crates.io-index#heck@0.4.1":
    {
      "name": "heck",
      "version": "0.4.1",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "heck is a case conversion library.",
      "repo": "https://github.com/withoutboats/heck"
    },
    "registry+https://github.com/rust-lang/crates.io-index#heck@0.5.0":
    {
      "name": "heck",
      "version": "0.5.0",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "heck is a case conversion library.",
      "repo": "https://github.com/withoutboats/heck"
    },
    "registry+https://github.com/rust-lang/crates.io-index#indexmap@2.2.6":
    {
      "name": "indexmap",
      "version": "2.2.6",
      "license": "Apache-2.0 OR MIT",
      "license_files": [
        "LICENSE-MIT"
      ],
      "desc": "A hash table with consistent order and fast iteration.",
      "repo": "https://github.com/indexmap-rs/indexmap"
    },
    "registry+https://github.com/rust-lang/crates.io-index#inline_colorization@0.1.6":
    {
      "name": "inline_colorization",
      "version": "0.1.6",
      "license": "MIT",
      "license_files":
      [
        "LICENSE"
      ],
      "desc": "format!(\"Lets the user {color_red}colorize{color_reset} and {style_underline}style the output{style_reset} text using inline variables\");",
      "repo": null
    },
    "registry+https://github.com/rust-lang/crates.io-index#is-root@0.1.3":
    {
      "name": "is-root",
      "version": "0.1.3",
      "license": "MIT",
      "license_files":
      [
        "LICENSE"
      ],
      "desc": "A simple library to detect whether you are root/admin or not",
      "repo": "https://gitlab.com/caralice/is-root"
    },
    "registry+https://github.com/rust-lang/crates.io-index#is_terminal_polyfill@1.70.0":
    {
      "name": "is_terminal_polyfill",
      "version": "1.70.0",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "Polyfill for `is_terminal` stdlib feature for use with older MSRVs",
      "repo": "https://github.com/polyfill-rs/is_terminal_polyfill"
    },
    "registry+https://github.com/rust-lang/crates.io-index#itoa@1.0.11":
    {
      "name": "itoa",
      "version": "1.0.11",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "Fast integer primitive to string conversion",
      "repo": "https://github.com/dtolnay/itoa"
    },
    "registry+https://github.com/rust-lang/crates.io-index#lazy_static@1.4.0":
    {
      "name": "lazy_static",
      "version": "1.4.0",
      "license": "MIT/Apache-2.0",
      "license_files":
      [
        "LICENSE-APACHE",
        "LICENSE-MIT"
      ],
      "desc": "A macro for declaring lazily evaluated statics in Rust.",
      "repo": "https://github.com/rust-lang-nursery/lazy-static.rs"
    },
    "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.154":
    {
      "name": "libc",
      "version": "0.2.154",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "Raw FFI bindings to platform libraries like libc.\n",
      "repo": "https://github.com/rust-lang/libc"
    },
    "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.12":
    {
      "name": "lock_api",
      "version": "0.4.12",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "Wrappers to create fully-featured Mutex and RwLock types. Compatible with no_std.",
      "repo": "https://github.com/Amanieu/parking_lot"
    },
    "registry+https://github.com/rust-lang/crates.io-index#log@0.4.21":
    {
      "name": "log",
      "version": "0.4.21",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "A lightweight logging facade for Rust\n",
      "repo": "https://github.com/rust-lang/log"
    },
    "registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.2":
    {
      "name": "memchr",
      "version": "2.7.2",
      "license": "Unlicense OR MIT",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "Provides extremely fast (uses SIMD on x86_64, aarch64 and wasm32) routines for\n1, 2 or 3 byte search and single substring search.\n",
      "repo": "https://github.com/BurntSushi/memchr"
    },
    "registry+https://github.com/rust-lang/crates.io-index#minimal-lexical@0.2.1":
    {
      "name": "minimal-lexical",
      "version": "0.2.1",
      "license": "MIT/Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT",
        "LICENSE-APACHE"
      ],
      "desc": "Fast float parsing conversion routines.",
      "repo": "https://github.com/Alexhuszagh/minimal-lexical"
    },
    "registry+https://github.com/rust-lang/crates.io-index#nom@7.1.3":
    {
      "name": "nom",
      "version": "7.1.3",
      "license": "MIT",
      "license_files":
      [
        "LICENSE"
      ],
      "desc": "A byte-oriented, zero-copy, parser combinators library",
      "repo": "https://github.com/Geal/nom"
    },
    "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.19.0":
    {
      "name": "once_cell",
      "version": "1.19.0",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "Single assignment cells and lazy values.",
      "repo": "https://github.com/matklad/once_cell"
    },
    "registry+https://github.com/rust-lang/crates.io-index#papergrid@0.11.0":
    {
      "name": "papergrid",
      "version": "0.11.0",
      "license": "MIT",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "Papergrid is a core library to print a table",
      "repo": "https://github.com/zhiburt/tabled"
    },
    "registry+https://github.com/rust-lang/crates.io-index#parking_lot@0.12.2":
    {
      "name": "parking_lot",
      "version": "0.12.2",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "More compact and efficient implementations of the standard synchronization primitives.",
      "repo": "https://github.com/Amanieu/parking_lot"
    },
    "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.10":
    {
      "name": "parking_lot_core",
      "version": "0.9.10",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "An advanced API for creating custom synchronization primitives.",
      "repo": "https://github.com/Amanieu/parking_lot"
    },
    "registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.14":
    {
      "name": "pin-project-lite",
      "version": "0.2.14",
      "license": "Apache-2.0 OR MIT",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "A lightweight version of pin-project written with declarative macros.\n",
      "repo": "https://github.com/taiki-e/pin-project-lite"
    },
    "registry+https://github.com/rust-lang/crates.io-index#pin-utils@0.1.0":
    {
      "name": "pin-utils",
      "version": "0.1.0",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "Utilities for pinning\n",
      "repo": "https://github.com/rust-lang-nursery/pin-utils"
    },
    "registry+https://github.com/rust-lang/crates.io-index#ppv-lite86@0.2.17":
    {
      "name": "ppv-lite86",
      "version": "0.2.17",
      "license": "MIT/Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT",
        "LICENSE-APACHE"
      ],
      "desc": "Implementation of the crypto-simd API for x86",
      "repo": "https://github.com/cryptocorrosion/cryptocorrosion"
    },
    "registry+https://github.com/rust-lang/crates.io-index#proc-macro-error-attr@1.0.4":
    {
      "name": "proc-macro-error-attr",
      "version": "1.0.4",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "Attribute macro for proc-macro-error crate",
      "repo": "https://gitlab.com/CreepySkeleton/proc-macro-error"
    },
    "registry+https://github.com/rust-lang/crates.io-index#proc-macro-error@1.0.4":
    {
      "name": "proc-macro-error",
      "version": "1.0.4",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "Almost drop-in replacement to panics in proc-macros",
      "repo": "https://gitlab.com/CreepySkeleton/proc-macro-error"
    },
    "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.82":
    {
      "name": "proc-macro2",
      "version": "1.0.82",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "A substitute implementation of the compiler's `proc_macro` API to decouple token-based libraries from the procedural macro use case.",
      "repo": "https://github.com/dtolnay/proc-macro2"
    },
    "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.36":
    {
      "name": "quote",
      "version": "1.0.36",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "Quasi-quoting macro quote!(...)",
      "repo": "https://github.com/dtolnay/quote"
    },
    "registry+https://github.com/rust-lang/crates.io-index#rand@0.4.6":
    {
      "name": "rand",
      "version": "0.4.6",
      "license": "MIT/Apache-2.0",
      "license_files":
      [
        "LICENSE-APACHE",
        "LICENSE-MIT"
      ],
      "desc": "Random number generators and other randomness functionality.\n",
      "repo": "https://github.com/rust-lang-nursery/rand"
    },
    "registry+https://github.com/rust-lang/crates.io-index#rand@0.8.5":
    {
      "name": "rand",
      "version": "0.8.5",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "Random number generators and other randomness functionality.\n",
      "repo": "https://github.com/rust-random/rand"
    },
    "registry+https://github.com/rust-lang/crates.io-index#rand_chacha@0.3.1":
    {
      "name": "rand_chacha",
      "version": "0.3.1",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "ChaCha random number generator\n",
      "repo": "https://github.com/rust-random/rand"
    },
    "registry+https://github.com/rust-lang/crates.io-index#rand_core@0.3.1":
    {
      "name": "rand_core",
      "version": "0.3.1",
      "license": "MIT/Apache-2.0",
      "license_files":
      [
        "LICENSE-APACHE",
        "LICENSE-MIT"
      ],
      "desc": "Core random number generator traits and tools for implementation.\n",
      "repo": "https://github.com/rust-random/rand"
    },
    "registry+https://github.com/rust-lang/crates.io-index#rand_core@0.4.2":
    {
      "name": "rand_core",
      "version": "0.4.2",
      "license": "MIT/Apache-2.0",
      "license_files":
      [
        "LICENSE-APACHE",
        "LICENSE-MIT"
      ],
      "desc": "Core random number generator traits and tools for implementation.\n",
      "repo": "https://github.com/rust-random/rand"
    },
    "registry+https://github.com/rust-lang/crates.io-index#rand_core@0.6.4":
    {
      "name": "rand_core",
      "version": "0.6.4",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "Core random number generator traits and tools for implementation.\n",
      "repo": "https://github.com/rust-random/rand"
    },
    "registry+https://github.com/rust-lang/crates.io-index#rdrand@0.4.0":
    {
      "name": "rdrand",
      "version": "0.4.0",
      "license": "ISC",
      "license_files":
      [
        "LICENSE"
      ],
      "desc": "An implementation of random number generator based on rdrand and rdseed instructions",
      "repo": "https://github.com/nagisa/rust_rdrand/"
    },
    "registry+https://github.com/rust-lang/crates.io-index#redox_syscall@0.5.1":
    {
      "name": "redox_syscall",
      "version": "0.5.1",
      "license": "MIT",
      "license_files":
      [
        "LICENSE"
      ],
      "desc": "A Rust library to access raw Redox system calls",
      "repo": "https://gitlab.redox-os.org/redox-os/syscall"
    },
    "registry+https://github.com/rust-lang/crates.io-index#regex-automata@0.4.6":
    {
      "name": "regex-automata",
      "version": "0.4.6",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "Automata construction and matching using regular expressions.",
      "repo": "https://github.com/rust-lang/regex/tree/master/regex-automata"
    },
    "registry+https://github.com/rust-lang/crates.io-index#regex-syntax@0.8.3":
    {
      "name": "regex-syntax",
      "version": "0.8.3",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "A regular expression parser.",
      "repo": "https://github.com/rust-lang/regex/tree/master/regex-syntax"
    },
    "registry+https://github.com/rust-lang/crates.io-index#regex@1.10.4":
    {
      "name": "regex",
      "version": "1.10.4",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "An implementation of regular expressions for Rust. This implementation uses\nfinite automata and guarantees linear time matching on all inputs.\n",
      "repo": "https://github.com/rust-lang/regex"
    },
    "registry+https://github.com/rust-lang/crates.io-index#relative-path@1.9.3":
    {
      "name": "relative-path",
      "version": "1.9.3",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "https://raw.githubusercontent.com/udoprog/relative-path/main/LICENSE-MIT"
      ],
      "desc": "Portable, relative paths for Rust.",
      "repo": "https://github.com/udoprog/relative-path"
    },
    "registry+https://github.com/rust-lang/crates.io-index#remove_dir_all@0.5.3":
    {
      "name": "remove_dir_all",
      "version": "0.5.3",
      "license": "MIT/Apache-2.0",
      "license_files":
      [
        "LICENCE-APACHE",
        "LICENCE-MIT"
      ],
      "desc": "A safe, reliable implementation of remove_dir_all for Windows",
      "repo": "https://github.com/XAMPPRocky/remove_dir_all.git"
    },
    "registry+https://github.com/rust-lang/crates.io-index#rstest@0.18.2":
    {
      "name": "rstest",
      "version": "0.18.2",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENCE-MIT"
      ],
      "desc": "Rust fixture based test framework. It use procedural macro\nto implement fixtures and table based tests.\n",
      "repo": "https://github.com/la10736/rstest"
    },
    "registry+https://github.com/rust-lang/crates.io-index#rstest_macros@0.18.2":
    {
      "name": "rstest_macros",
      "version": "0.18.2",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENCE-MIT"
      ],
      "desc": "Rust fixture based test framework. It use procedural macro\nto implement fixtures and table based tests.\n",
      "repo": "https://github.com/la10736/rstest"
    },
    "registry+https://github.com/rust-lang/crates.io-index#rstest_reuse@0.6.0":
    {
      "name": "rstest_reuse",
      "version": "0.6.0",
      "license": "MIT/Apache-2.0",
      "license_files":
      [
        "LICENCE-MIT",
        "LICENSE-APACHE"
      ],
      "desc": "Reuse rstest attributes: create a set of tests and apply it \nto every scenario you want to test.\n",
      "repo": "https://github.com/la10736/rstest"
    },
    "registry+https://github.com/rust-lang/crates.io-index#rustc_version@0.4.0":
    {
      "name": "rustc_version",
      "version": "0.4.0",
      "license": "MIT/Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT",
        "LICENSE-APACHE"
      ],
      "desc": "A library for querying the version of a installed rustc compiler",
      "repo": "https://github.com/Kimundi/rustc-version-rs"
    },
    "registry+https://github.com/rust-lang/crates.io-index#ryu@1.0.18":
    {
      "name": "ryu",
      "version": "1.0.18",
      "license": "Apache-2.0 OR BSL-1.0",
      "license_files":
      [
        "LICENSE-BOOST"
      ],
      "desc": "Fast floating point to string conversion",
      "repo": "https://github.com/dtolnay/ryu"
    },
    "registry+https://github.com/rust-lang/crates.io-index#scopeguard@1.2.0":
    {
      "name": "scopeguard",
      "version": "1.2.0",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "A RAII scope guard that will run a given closure when it goes out of scope,\neven if the code between panics (assuming unwinding panic).\n\nDefines the macros `defer!`, `defer_on_unwind!`, `defer_on_success!` as\nshorthands for guards with one of the implemented strategies.\n",
      "repo": "https://github.com/bluss/scopeguard"
    },
    "registry+https://github.com/rust-lang/crates.io-index#semver@1.0.23":
    {
      "name": "semver",
      "version": "1.0.23",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "Parser and evaluator for Cargo's flavor of Semantic Versioning",
      "repo": "https://github.com/dtolnay/semver"
    },
    "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.201":
    {
      "name": "serde",
      "version": "1.0.201",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "A generic serialization/deserialization framework",
      "repo": "https://github.com/serde-rs/serde"
    },
    "registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.201":
    {
      "name": "serde_derive",
      "version": "1.0.201",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "Macros 1.1 implementation of #[derive(Serialize, Deserialize)]",
      "repo": "https://github.com/serde-rs/serde"
    },
    "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.117":
    {
      "name": "serde_json",
      "version": "1.0.117",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "A JSON serialization file format",
      "repo": "https://github.com/serde-rs/json"
    },
    "registry+https://github.com/rust-lang/crates.io-index#serde_spanned@0.6.6":
    {
      "name": "serde_spanned",
      "version": "0.6.6",
      "license": "MIT OR Apache-2.0",
      "license_files": [
        "LICENSE-MIT"
      ],
      "desc": "Serde-compatible spanned Value",
      "repo": "https://github.com/toml-rs/toml"
    },
    "registry+https://github.com/rust-lang/crates.io-index#serial_test@2.0.0":
    {
      "name": "serial_test",
      "version": "2.0.0",
      "license": "MIT",
      "license_files":
      [
        "LICENSE"
      ],
      "desc": "Allows for the creation of serialised Rust tests",
      "repo": "https://github.com/palfrey/serial_test/"
    },
    "registry+https://github.com/rust-lang/crates.io-index#serial_test_derive@2.0.0":
    {
      "name": "serial_test_derive",
      "version": "2.0.0",
      "license": "MIT",
      "license_files":
      [
        "LICENSE"
      ],
      "desc": "Helper crate for serial_test",
      "repo": "https://github.com/palfrey/serial_test/"
    },
    "registry+https://github.com/rust-lang/crates.io-index#slab@0.4.9":
    {
      "name": "slab",
      "version": "0.4.9",
      "license": "MIT",
      "license_files":
      [
        "LICENSE"
      ],
      "desc": "Pre-allocated storage for a uniform data type",
      "repo": "https://github.com/tokio-rs/slab"
    },
    "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.13.2":
    {
      "name": "smallvec",
      "version": "1.13.2",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "'Small vector' optimization: store up to a small number of items on the stack",
      "repo": "https://github.com/servo/rust-smallvec"
    },
    "registry+https://github.com/rust-lang/crates.io-index#strsim@0.11.1":
    {
      "name": "strsim",
      "version": "0.11.1",
      "license": "MIT",
      "license_files":
      [
        "LICENSE"
      ],
      "desc": "Implementations of string similarity metrics. Includes Hamming, Levenshtein,\nOSA, Damerau-Levenshtein, Jaro, Jaro-Winkler, and Sørensen-Dice.\n",
      "repo": "https://github.com/rapidfuzz/strsim-rs"
    },
    "registry+https://github.com/rust-lang/crates.io-index#syn@1.0.109":
    {
      "name": "syn",
      "version": "1.0.109",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "Parser for Rust source code",
      "repo": "https://github.com/dtolnay/syn"
    },
    "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.62":
    {
      "name": "syn",
      "version": "2.0.62",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "Parser for Rust source code",
      "repo": "https://github.com/dtolnay/syn"
    },
    "registry+https://github.com/rust-lang/crates.io-index#tabled@0.15.0":
    {
      "name": "tabled",
      "version": "0.15.0",
      "license": "MIT",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "An easy to use library for pretty print tables of Rust `struct`s and `enum`s.",
      "repo": "https://github.com/zhiburt/tabled"
    },
    "registry+https://github.com/rust-lang/crates.io-index#tabled_derive@0.7.0":
    {
      "name": "tabled_derive",
      "version": "0.7.0",
      "license": "MIT",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "Derive macros which is used by tabled crate",
      "repo": "https://github.com/zhiburt/tabled"
    },
    "registry+https://github.com/rust-lang/crates.io-index#tempdir@0.3.7":
    {
      "name": "tempdir",
      "version": "0.3.7",
      "license": "MIT/Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT",
        "LICENSE-APACHE"
      ],
      "desc": "A library for managing a temporary directory and deleting all contents when it's\ndropped.\n",
      "repo": "https://github.com/rust-lang/tempdir"
    },
    "registry+https://github.com/rust-lang/crates.io-index#toml@0.7.8":
    {
      "name": "toml",
      "version": "0.7.8",
      "license": "MIT OR Apache-2.0",
      "license_files": [
        "LICENSE-MIT"
      ],
      "desc": "A native Rust encoder and decoder of TOML-formatted files and streams. Provides\nimplementations of the standard Serialize/Deserialize traits for TOML data to\nfacilitate deserializing and serializing Rust structures.\n",
      "repo": "https://github.com/toml-rs/toml"
    },
    "registry+https://github.com/rust-lang/crates.io-index#toml_datetime@0.6.6":
    {
      "name": "toml_datetime",
      "version": "0.6.6",
      "license": "MIT OR Apache-2.0",
      "license_files": [
        "LICENSE-MIT"
      ],
      "desc": "A TOML-compatible datetime type",
      "repo": "https://github.com/toml-rs/toml"
    },
    "registry+https://github.com/rust-lang/crates.io-index#toml_edit@0.19.15":
    {
      "name": "toml_edit",
      "version": "0.19.15",
      "license": "MIT OR Apache-2.0",
      "license_files": [
        "LICENSE-MIT"
      ],
      "desc": "Yet another format-preserving TOML parser.",
      "repo": "https://github.com/toml-rs/toml"
    },
    "registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.12":
    {
      "name": "unicode-ident",
      "version": "1.0.12",
      "license": "(MIT OR Apache-2.0) AND Unicode-DFS-2016",
      "license_files":
      [
        "LICENSE-MIT",
        "LICENSE-UNICODE"
      ],
      "desc": "Determine whether characters have the XID_Start or XID_Continue properties according to Unicode Standard Annex #31",
      "repo": "https://github.com/dtolnay/unicode-ident"
    },
    "registry+https://github.com/rust-lang/crates.io-index#unicode-width@0.1.12":
    {
      "name": "unicode-width",
      "version": "0.1.12",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "Determine displayed width of `char` and `str` types\naccording to Unicode Standard Annex #11 rules.\n",
      "repo": "https://github.com/unicode-rs/unicode-width"
    },
    "registry+https://github.com/rust-lang/crates.io-index#users@0.11.0":
    {
      "name": "users",
      "version": "0.11.0",
      "license": "MIT",
      "license_files":
      [
        "LICENCE"
      ],
      "desc": "Library for accessing Unix users and groups",
      "repo": "https://github.com/ogham/rust-users"
    },
    "registry+https://github.com/rust-lang/crates.io-index#utf8parse@0.2.1":
    {
      "name": "utf8parse",
      "version": "0.2.1",
      "license": "Apache-2.0 OR MIT",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "Table-driven UTF-8 parser",
      "repo": "https://github.com/alacritty/vte"
    },
    "registry+https://github.com/rust-lang/crates.io-index#version_check@0.9.4":
    {
      "name": "version_check",
      "version": "0.9.4",
      "license": "MIT/Apache-2.0",
      "license_files":
      [
        "LICENSE-MIT",
        "LICENSE-APACHE"
      ],
      "desc": "Tiny crate to check the version of the installed/running rustc.",
      "repo": "https://github.com/SergioBenitez/version_check"
    },
    "registry+https://github.com/rust-lang/crates.io-index#vte@0.10.1":
    {
      "name": "vte",
      "version": "0.10.1",
      "license": "Apache-2.0 OR MIT",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "Parser for implementing terminal emulators",
      "repo": "https://github.com/alacritty/vte"
    },
    "registry+https://github.com/rust-lang/crates.io-index#vte_generate_state_changes@0.1.1":
    {
      "name": "vte_generate_state_changes",
      "version": "0.1.1",
      "license": "Apache-2.0 OR MIT",
      "license_files":
      [
        "https://raw.githubusercontent.com/jwilm/vte/master/LICENSE-MIT"
      ],
      "desc": "Proc macro for generating VTE state changes",
      "repo": "https://github.com/jwilm/vte"
    },
    "registry+https://github.com/rust-lang/crates.io-index#wasi@0.11.0+wasi-snapshot-preview1":
    {
      "name": "wasi",
      "version": "0.11.0+wasi-snapshot-preview1",
      "license": "Apache-2.0 WITH LLVM-exception OR Apache-2.0 OR MIT",
      "license_files":
      [
        "LICENSE-MIT"
      ],
      "desc": "Experimental WASI API bindings for Rust",
      "repo": "https://github.com/bytecodealliance/wasi"
    },
    "registry+https://github.com/rust-lang/crates.io-index#winapi-i686-pc-windows-gnu@0.4.0":
    {
      "name": "winapi-i686-pc-windows-gnu",
      "version": "0.4.0",
      "license": "MIT/Apache-2.0",
      "license_files":
      [
        "https://raw.githubusercontent.com/retep998/winapi-rs/0.3/i686/LICENSE-MIT",
        "https://raw.githubusercontent.com/retep998/winapi-rs/0.3/i686/LICENSE-APACHE"
      ],
      "desc": "Import libraries for the i686-pc-windows-gnu target. Please don't use this crate directly, depend on winapi instead.",
      "repo": "https://github.com/retep998/winapi-rs"
    },
    "registry+https://github.com/rust-lang/crates.io-index#winapi-x86_64-pc-windows-gnu@0.4.0":
    {
      "name": "winapi-x86_64-pc-windows-gnu",
      "version": "0.4.0",
      "license": "MIT/Apache-2.0",
      "license_files":
      [
        "https://raw.githubusercontent.com/retep998/winapi-rs/0.3/LICENSE-MIT",
        "https://raw.githubusercontent.com/retep998/winapi-rs/0.3/LICENSE-APACHE"
      ],
      "desc": "Import libraries for the x86_64-pc-windows-gnu target. Please don't use this crate directly, depend on winapi instead.",
      "repo": "https://github.com/retep998/winapi-rs"
    },
    "registry+https://github.com/rust-lang/crates.io-index#winapi@0.3.9":
    {
      "name": "winapi",
      "version": "0.3.9",
      "license": "MIT/Apache-2.0",
      "license_files":
      [
        "LICENSE-APACHE",
        "LICENSE-MIT"
      ],
      "desc": "Raw FFI bindings for all of Windows API.",
      "repo": "https://github.com/retep998/winapi-rs"
    },
    "registry+https://github.com/rust-lang/crates.io-index#windows-sys@0.48.0":
    {
      "name": "windows-sys",
      "version": "0.48.0",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "license-mit"
      ],
      "desc": "Rust for Windows",
      "repo": "https://github.com/microsoft/windows-rs"
    },
    "registry+https://github.com/rust-lang/crates.io-index#windows-sys@0.52.0":
    {
      "name": "windows-sys",
      "version": "0.52.0",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "license-mit"
      ],
      "desc": "Rust for Windows",
      "repo": "https://github.com/microsoft/windows-rs"
    },
    "registry+https://github.com/rust-lang/crates.io-index#windows-targets@0.48.5":
    {
      "name": "windows-targets",
      "version": "0.48.5",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "license-mit"
      ],
      "desc": "Import libs for Windows",
      "repo": "https://github.com/microsoft/windows-rs"
    },
    "registry+https://github.com/rust-lang/crates.io-index#windows-targets@0.52.5":
    {
      "name": "windows-targets",
      "version": "0.52.5",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "license-mit"
      ],
      "desc": "Import libs for Windows",
      "repo": "https://github.com/microsoft/windows-rs"
    },
    "registry+https://github.com/rust-lang/crates.io-index#windows_aarch64_gnullvm@0.48.5":
    {
      "name": "windows_aarch64_gnullvm",
      "version": "0.48.5",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "license-mit"
      ],
      "desc": "Import lib for Windows",
      "repo": "https://github.com/microsoft/windows-rs"
    },
    "registry+https://github.com/rust-lang/crates.io-index#windows_aarch64_gnullvm@0.52.5":
    {
      "name": "windows_aarch64_gnullvm",
      "version": "0.52.5",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "license-mit"
      ],
      "desc": "Import lib for Windows",
      "repo": "https://github.com/microsoft/windows-rs"
    },
    "registry+https://github.com/rust-lang/crates.io-index#windows_aarch64_msvc@0.48.5":
    {
      "name": "windows_aarch64_msvc",
      "version": "0.48.5",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "license-mit"
      ],
      "desc": "Import lib for Windows",
      "repo": "https://github.com/microsoft/windows-rs"
    },
    "registry+https://github.com/rust-lang/crates.io-index#windows_aarch64_msvc@0.52.5":
    {
      "name": "windows_aarch64_msvc",
      "version": "0.52.5",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "license-mit"
      ],
      "desc": "Import lib for Windows",
      "repo": "https://github.com/microsoft/windows-rs"
    },
    "registry+https://github.com/rust-lang/crates.io-index#windows_i686_gnu@0.48.5":
    {
      "name": "windows_i686_gnu",
      "version": "0.48.5",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "license-mit"
      ],
      "desc": "Import lib for Windows",
      "repo": "https://github.com/microsoft/windows-rs"
    },
    "registry+https://github.com/rust-lang/crates.io-index#windows_i686_gnu@0.52.5":
    {
      "name": "windows_i686_gnu",
      "version": "0.52.5",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "license-mit"
      ],
      "desc": "Import lib for Windows",
      "repo": "https://github.com/microsoft/windows-rs"
    },
    "registry+https://github.com/rust-lang/crates.io-index#windows_i686_gnullvm@0.52.5":
    {
      "name": "windows_i686_gnullvm",
      "version": "0.52.5",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "license-mit"
      ],
      "desc": "Import lib for Windows",
      "repo": "https://github.com/microsoft/windows-rs"
    },
    "registry+https://github.com/rust-lang/crates.io-index#windows_i686_msvc@0.48.5":
    {
      "name": "windows_i686_msvc",
      "version": "0.48.5",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "license-mit"
      ],
      "desc": "Import lib for Windows",
      "repo": "https://github.com/microsoft/windows-rs"
    },
    "registry+https://github.com/rust-lang/crates.io-index#windows_i686_msvc@0.52.5":
    {
      "name": "windows_i686_msvc",
      "version": "0.52.5",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "license-mit"
      ],
      "desc": "Import lib for Windows",
      "repo": "https://github.com/microsoft/windows-rs"
    },
    "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_gnu@0.48.5":
    {
      "name": "windows_x86_64_gnu",
      "version": "0.48.5",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "license-mit"
      ],
      "desc": "Import lib for Windows",
      "repo": "https://github.com/microsoft/windows-rs"
    },
    "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_gnu@0.52.5":
    {
      "name": "windows_x86_64_gnu",
      "version": "0.52.5",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "license-mit"
      ],
      "desc": "Import lib for Windows",
      "repo": "https://github.com/microsoft/windows-rs"
    },
    "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_gnullvm@0.48.5":
    {
      "name": "windows_x86_64_gnullvm",
      "version": "0.48.5",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "license-mit"
      ],
      "desc": "Import lib for Windows",
      "repo": "https://github.com/microsoft/windows-rs"
    },
    "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_gnullvm@0.52.5":
    {
      "name": "windows_x86_64_gnullvm",
      "version": "0.52.5",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "license-mit"
      ],
      "desc": "Import lib for Windows",
      "repo": "https://github.com/microsoft/windows-rs"
    },
    "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.48.5":
    {
      "name": "windows_x86_64_msvc",
      "version": "0.48.5",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "license-mit"
      ],
      "desc": "Import lib for Windows",
      "repo": "https://github.com/microsoft/windows-rs"
    },
    "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.5":
    {
      "name": "windows_x86_64_msvc",
      "version": "0.52.5",
      "license": "MIT OR Apache-2.0",
      "license_files":
      [
        "license-mit"
      ],
      "desc": "Import lib for Windows",
      "repo": "https://github.com/microsoft/windows-rs"
    },
    "registry+https://github.com/rust-lang/crates.io-index#winnow@0.5.40":
    {
      "name": "winnow",
      "version": "0.5.40",
      "license": "MIT",
      "license_files": [
        "LICENSE-MIT"
      ],
      "desc": "A byte-oriented, zero-copy, parser combinators library",
      "repo": "https://github.com/winnow-rs/winnow"
    },
    "registry+https://github.com/rust-lang/crates.io-index#winreg@0.52.0":
    {
      "name": "winreg",
      "version": "0.52.0",
      "license": "MIT",
      "license_files":
      [
        "LICENSE"
      ],
      "desc": "Rust bindings to MS Windows Registry API",
      "repo": "https://github.com/gentoo90/winreg-rs"
    },
    "registry+https://github.com/rust-lang/crates.io-index#winresource@0.1.17":
    {
      "name": "winresource",
      "version": "0.1.17",
      "license": "MIT",
      "license_files": [
        "LICENSE"
      ],
      "desc": "Create and set windows icons and metadata for executables",
      "repo": "https://github.com/BenjaminRi/winresource"
    }
  }
}